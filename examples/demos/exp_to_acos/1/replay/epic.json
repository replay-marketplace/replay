{
  "first_node": "template_1",
  "node_counter": 9,
  "graph": {
    "directed": true,
    "multigraph": false,
    "graph": {},
    "nodes": [
      {
        "opcode": "TEMPLATE",
        "contents": {
          "path": "templates/ttnn/newop_generic"
        },
        "id": "template_1"
      },
      {
        "opcode": "DOCS",
        "contents": {
          "path": "docs/"
        },
        "id": "docs_2"
      },
      {
        "opcode": "PROMPT",
        "contents": {
          "prompt": "Update @code:tt_eltwise_sfpu.cpp to implement acos operation instead of exp Update @code:test_newop.py to compare against ttnn.acos instead of exp Reference @docs:kernel_api_compute_operations.md for API Reference If you use any compute APIs include \"compute_kernel_api.h\" header",
          "docs_refs": [
            "kernel_api_compute_operations.md"
          ],
          "template_refs": [],
          "code_refs": [
            "tt_eltwise_sfpu.cpp",
            "test_newop.py"
          ],
          "run_logs_refs": [],
          "run_refs": []
        },
        "id": "prompt_3"
      },
      {
        "opcode": "EXIT",
        "contents": {},
        "id": "exit_node_5"
      },
      {
        "opcode": "RUN",
        "contents": {
          "command": "python3 test_newop.py"
        },
        "id": "run_7"
      },
      {
        "opcode": "CONDITIONAL",
        "contents": {
          "iteration_count": 0,
          "run_node_id": "run_7",
          "true_node_target": "exit_node_5",
          "false_node_target": "fix_9",
          "iteration_max": 5,
          "condition": false
        },
        "id": "conditional_8"
      },
      {
        "opcode": "FIX",
        "contents": {
          "run_ref": "run_7"
        },
        "id": "fix_9"
      }
    ],
    "links": [
      {
        "source": "template_1",
        "target": "docs_2"
      },
      {
        "source": "docs_2",
        "target": "prompt_3"
      },
      {
        "source": "prompt_3",
        "target": "run_7"
      },
      {
        "source": "run_7",
        "target": "conditional_8"
      },
      {
        "source": "conditional_8",
        "target": "exit_node_5"
      },
      {
        "source": "conditional_8",
        "target": "fix_9"
      },
      {
        "source": "fix_9",
        "target": "run_7"
      }
    ]
  }
}